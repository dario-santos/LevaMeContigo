package com.dariosantos.wordsdontcomeeasy;


import androidx.appcompat.app.AppCompatActivity;

import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;

// Todo: Colocar o link da aplicação no share
public class Maratona extends AppCompatActivity
{
    private SQLiteDatabase oSQLiteDB;
    private AjudanteParaAbrirBD oAPABD;
    private int numOfWords = 997559;

    private String userName = "";

    private int previusBestScore = 0;
    private int previusExp = 0;

    private ArrayList<Button> buttons = new ArrayList<>();
    private String correctWord = "";
    private int letterIndex = 0;
    private int currentScore = 0;
    private int currentTries = 0;
    private int numberOfwords = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maratona);

        Intent intent = getIntent();
        userName = intent.getStringExtra("name");

        oAPABD = new AjudanteParaAbrirBD(this);
        oSQLiteDB = oAPABD.getWritableDatabase();

        Cursor oCursor = oSQLiteDB.query(AjudanteParaAbrirBD.TABLE_USER,
                new String[]{AjudanteParaAbrirBD.USER_EXP, AjudanteParaAbrirBD.USER_BESTSCORE}, "Name = ?", new String[]{userName}
                ,null, null, null, null);

        if(oCursor.moveToFirst())
        {
            previusExp = oCursor.getInt(0);
            previusBestScore = oCursor.getInt(1);
        }

        // Guarda os botões para guardar na lista
        Button button1 = findViewById(R.id.maratona_button1);
        Button button2 = findViewById(R.id.maratona_button2);
        Button button3 = findViewById(R.id.maratona_button3);
        Button button4 = findViewById(R.id.maratona_button4);
        Button button5 = findViewById(R.id.maratona_button5);

        buttons.add(button1);
        buttons.add(button2);
        buttons.add(button3);
        buttons.add(button4);
        buttons.add(button5);

        // Dificuldade do jogo
        numOfWords = GetDifficulty(previusExp);
        // Inicia o Jogo
        GetNextLevel();
    }

    @Override
    protected void onResume()
    {
        super.onResume();
        oSQLiteDB = oAPABD.getWritableDatabase();
    }

    @Override
    protected void onPause()
    {
        ContentValues cv = new ContentValues();
        cv.put(AjudanteParaAbrirBD.USER_EXP, previusExp + currentScore);
        if(currentScore > previusBestScore)
            cv.put(AjudanteParaAbrirBD.USER_BESTSCORE, String.valueOf(currentScore));
        else
            cv.put(AjudanteParaAbrirBD.USER_BESTSCORE, String.valueOf(previusBestScore));


        oSQLiteDB.update(AjudanteParaAbrirBD.TABLE_USER,cv,
                "Name = ?",new String[]{userName});

        ContentValues cv2 = new ContentValues();
        cv2.put(AjudanteParaAbrirBD.GAME_USERNAME, userName);
        cv2.put(AjudanteParaAbrirBD.GAME_SCORE, currentScore);
        cv2.put(AjudanteParaAbrirBD.GAME_MODE, 0);

        oSQLiteDB.insert(AjudanteParaAbrirBD.TABLE_GAME,null,cv2);

        super.onPause();
        oAPABD.close();
    }

    private int GetDifficulty(int exp)
    {
        int level = (exp/1000);

        if(level <= 10)
            return 9794;
        else if(level <= 20)
            return 55641;
        else if(level <= 30)
            return 175369;
        else if(level <= 40)
            return 356282;
        else if(level <= 50)
            return 556765;
        else if(level <= 60)
            return 750828;
        else if(level <= 70)
            return 896756;
        else if(level <= 80)
            return 983949;

        return 997560;
    }

    private void GetNextLevel()
    {
        ResetGameState();

        TextView word = findViewById(R.id.maratona_palavra);

        correctWord = GetRandomWord();

        char correct;
        do{
            letterIndex = (int)(Math.random() * correctWord.length());
            correct = correctWord.charAt(letterIndex);

        }while(!GenerateLetter.IsValid(correct));

        String incorrectWord = GetWrongWord(correctWord, letterIndex);

        word.setText(incorrectWord);
        SetButtonLetter(correct, 4);
    }

    private void ResetGameState()
    {
        correctWord = "";
        letterIndex = 0;
        currentTries = 0;

        ImageButton b = findViewById(R.id.maratona_skip);
        b.setVisibility(View.INVISIBLE);

        TextView word = findViewById(R.id.maratona_palavra);
        word.setTextColor(getResources().getColor(R.color.maratona_word));

        int colors[] = {
                getResources().getColor(R.color.multiplayer_purple),
                getResources().getColor(R.color.multiplayer_blue),
                getResources().getColor(R.color.multiplayer_green),
                getResources().getColor(R.color.multiplayer_yellow),
                getResources().getColor(R.color.multiplayer_orange)
        };
        for(int i = 0 ; i < buttons.size() ; i++)
        {
            buttons.get(i).setClickable(true);
            buttons.get(i).setBackgroundColor(getResources().getColor(R.color.maratona_button));
            buttons.get(i).setTextColor(colors[i]);
        }
    }

    private String GetRandomWord()
    {
        int n = (int) (Math.random() * numOfWords);
        int cnt = 0;
        String line;
        try
        {
            InputStream fIn = getApplicationContext().getResources().getAssets().open("dicionario.txt");
            BufferedReader input = new BufferedReader(new InputStreamReader(fIn,"utf8"));

            while((line = input.readLine()) != null)
            {
                cnt++;

                if(cnt == n)
                    return line.toLowerCase();
            }
        }
        catch (Exception e)
        {
            